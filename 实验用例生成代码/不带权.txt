import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class RadomGraph {
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		System.out.println("请输入顶点个数");
		int num = sc.nextInt();

		Random random = new Random();
		/*
		 * 生成多个随即图并输出到文件
		 */
		for (int k = 1; k <= 100; k++) {
			File file = new File("C:\\ver\\vertex16\\ver" + k);
			file.createNewFile();
			try {
				// 初始化给定范围的数组
				int[] source = new int[num];
				for (int i = 1; i < num + 1; i++) {
					source[i - 1] = i;
				}

				FileWriter fileWriter = new FileWriter(file, true);
				for (int i = 0; i < source.length; i++) {
					String s = new String("ver(" + source[i] + "). ");
					fileWriter.write(s);
				}

				// 生成随机顶点序列
				int[] vertex = radomvertexArray(source, num);

				ArrayList arc_order = new ArrayList();
				arc_order = radomarcArray(vertex, num);

				for (int i = 0; i < arc_order.size(); i++) {
					int ran = random.nextInt(5) % (3) + 3;
					// 不带权
					String s = new String("arc(" + arc_order.get(i) + "," + arc_order.get(++i) + "). ");
					fileWriter.write(s);
				}
				String s = new String("ver_num(" + num + "). arc_num(" + num * (num - 1) / 2 + ").");
				fileWriter.write(s);
				fileWriter.close();
			} catch (Exception e) {
				// TODO: handle exception
				e.printStackTrace();
			}
			if (k == 100) {
				System.out.println("success!");
			}
		}

	}

	public static int[] radomvertexArray(int[] source, int num) {
		int[] vertex = new int[num];
		Random rd = new Random();
		int index = 0;
		for (int i = 0; i < vertex.length; i++) {
			// 待选数组0到(len-2)随机一个下标
			index = Math.abs(rd.nextInt() % num--);
			// 将随机到的数放入结果集
			vertex[i] = source[index];
			// 将待选数组中被随机到的数，用待选数组(len-1)下标对应的数替换
			source[index] = source[num];
		}
		return vertex;
	}

	public static ArrayList radomarcArray(int[] vertex, int num) {
		ArrayList arc = new ArrayList();
		int index = num;
		for (int i = 0; i < vertex.length - 1; i++) {
			for (int j = i + 1; j < vertex.length; j++) {
				// 生成0或1任意一个随机数
				int radom = Math.random() > 0.5 ? 1 : 0;
				if (radom == 1) {
					arc.add(vertex[i]);
					arc.add(vertex[j]);
				} else if (radom == 0) {
					arc.add(vertex[j]);
					arc.add(vertex[i]);
				}
			}
		}
		return arc;
	}
}
